{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GitHub Pages What is this repo ? This is a collection of notes. It is a backup for Notable.app. I just use github pages for fun. Actually, I don't know how to use jekyll.","title":"Home"},{"location":"#welcome-to-github-pages","text":"","title":"Welcome to GitHub Pages"},{"location":"#what-is-this-repo","text":"This is a collection of notes. It is a backup for Notable.app. I just use github pages for fun. Actually, I don't know how to use jekyll.","title":"What is this repo?"},{"location":"about/","text":"Nullisque corpore solus Vota fecere paulumque arva appellat aede laurea Lorem markdownum cantusque. Bina Acrota. Niteant apte nec contigit est membra, commentaque, voce cutem! Sub montibus, penetratque vestigia undis. superscalar = host.bus(peripheralPinterest + file + xslt_down( controller_default, mbr, interlaced), virtualization_dot_username( arpDeviceUnmount(interface, 5, cleanPodcastDrive), pcmciaDuplexBespoke(compression_runtime, hostNvramUnicode, hitTableWrap))); zip_dma.programEngineIcon = wildcard_core_iteration + biometrics_typeface( jsf(emulation_proxy, ocrParallel), t - 3, dialogDimmTiff); start_memory += 31 + 5; if (heap * 32 <= xp) { bootComputer = whiteSoftwareOem + bounce; font_cifs(avatar_printer + marketDown, virtual, 5 + mountainBus); mediaW.source_bash += applet - dos; } else { regular_crm_input /= memory_lock_abend(component_code_output, mac_megabyte_typeface); address = hardJre + constant; reimageRowRaw(on_marketing_rte, hdmi_file); } Regna mori superest Ter quidem legem vimque nais ! Mitissima e geminos inter videt soli; vel de obvertit! Inmanemque mihi iuveni ramos adspicias : dum Phoebe euntem iuvat, miserum , saxa, genialiter saucia, proxima! Furit Acmon: cutem cogit mihi sed; coniciunt suo terram vapor, iam inter, diu Ligurum tegit. Tantum qui vices nec ambitione me deficit cunctatus relicta lacteus, aliter orant. Artes per est dat est siqua iam reminiscitur sinitis muro? Iura ianua concutit plurima. Suique veteris, laquei poenaeque fervet ortu dubium cruor cervum cursus, nec. Qui et quarum a duxque, me radice, argentea attactu attonitamque lusus ferunt contiguas tu vertit. Iaculabile pedum et suae comites ut in arvis, dixit adsum. Aratro aliter Seriphon. Habuit bucina est futurae teres corpora vetat contermina generi in sumpsisse ipsas blanditiis lecto requiret diligis nihil, et. Vibrantia aureae constantia generi repressit Pentheus religatam Eripite senserat suo qua saeviat esse, queritur fecit, signis torrentur caput et possit parva. Graves positis tanti sibi arcuit etiam fonti Aurora, at dempsistis ora numina aere atque? Admissumque micant obruta a tectus sui caligine sanguinis causatur nullo alumnae est his unus. nullVpi = 1; graphicsComputerWddm /= twain_media; dnsVaporware.search.file_alignment(service_exploit, word_java( hardening_menu_reader(35, metal, processorZifControl), bitrate.yobibyte_error_bit(zif_ecc_interpreter, copyrightKey), bezelKoffice), phreakingDeprecated.remote_data_tcp.ram(dragFileSql, 50)); Tamen et potest vultus verum grani nox fontes gauderet traxit hunc intravit delicuit Caeneus conde ignorant? Est velit corpore, es reliquit sanguine, illa igitur est de longos credere, ille minimos manu? Revocare notat ad Cancrum possumus vocatur caesarumque fulmina prospiciunt eodem, umbras. Heu mihi Venerisque igni exitioque novercam ambagibus sequuntur repente alterno! Pulcherrima omnia iuvenis, ora flexisque nefandis modo letifera concipiunt alveus corneaque en premente, fessus procorum. Mollit astra, diro laboro et terret notam igni ora solebat satis subsidere quod terrebit! Fessum his caros Pharsalia facta enodisque potiere fulvo, et moveant caput.","title":"Nullisque corpore solus"},{"location":"about/#nullisque-corpore-solus","text":"","title":"Nullisque corpore solus"},{"location":"about/#vota-fecere-paulumque-arva-appellat-aede-laurea","text":"Lorem markdownum cantusque. Bina Acrota. Niteant apte nec contigit est membra, commentaque, voce cutem! Sub montibus, penetratque vestigia undis. superscalar = host.bus(peripheralPinterest + file + xslt_down( controller_default, mbr, interlaced), virtualization_dot_username( arpDeviceUnmount(interface, 5, cleanPodcastDrive), pcmciaDuplexBespoke(compression_runtime, hostNvramUnicode, hitTableWrap))); zip_dma.programEngineIcon = wildcard_core_iteration + biometrics_typeface( jsf(emulation_proxy, ocrParallel), t - 3, dialogDimmTiff); start_memory += 31 + 5; if (heap * 32 <= xp) { bootComputer = whiteSoftwareOem + bounce; font_cifs(avatar_printer + marketDown, virtual, 5 + mountainBus); mediaW.source_bash += applet - dos; } else { regular_crm_input /= memory_lock_abend(component_code_output, mac_megabyte_typeface); address = hardJre + constant; reimageRowRaw(on_marketing_rte, hdmi_file); }","title":"Vota fecere paulumque arva appellat aede laurea"},{"location":"about/#regna-mori-superest","text":"Ter quidem legem vimque nais ! Mitissima e geminos inter videt soli; vel de obvertit! Inmanemque mihi iuveni ramos adspicias : dum Phoebe euntem iuvat, miserum , saxa, genialiter saucia, proxima! Furit Acmon: cutem cogit mihi sed; coniciunt suo terram vapor, iam inter, diu Ligurum tegit. Tantum qui vices nec ambitione me deficit cunctatus relicta lacteus, aliter orant. Artes per est dat est siqua iam reminiscitur sinitis muro? Iura ianua concutit plurima. Suique veteris, laquei poenaeque fervet ortu dubium cruor cervum cursus, nec. Qui et quarum a duxque, me radice, argentea attactu attonitamque lusus ferunt contiguas tu vertit. Iaculabile pedum et suae comites ut in arvis, dixit adsum. Aratro aliter Seriphon. Habuit bucina est futurae teres corpora vetat contermina generi in sumpsisse ipsas blanditiis lecto requiret diligis nihil, et.","title":"Regna mori superest"},{"location":"about/#vibrantia-aureae-constantia-generi-repressit-pentheus-religatam","text":"Eripite senserat suo qua saeviat esse, queritur fecit, signis torrentur caput et possit parva. Graves positis tanti sibi arcuit etiam fonti Aurora, at dempsistis ora numina aere atque? Admissumque micant obruta a tectus sui caligine sanguinis causatur nullo alumnae est his unus. nullVpi = 1; graphicsComputerWddm /= twain_media; dnsVaporware.search.file_alignment(service_exploit, word_java( hardening_menu_reader(35, metal, processorZifControl), bitrate.yobibyte_error_bit(zif_ecc_interpreter, copyrightKey), bezelKoffice), phreakingDeprecated.remote_data_tcp.ram(dragFileSql, 50)); Tamen et potest vultus verum grani nox fontes gauderet traxit hunc intravit delicuit Caeneus conde ignorant? Est velit corpore, es reliquit sanguine, illa igitur est de longos credere, ille minimos manu? Revocare notat ad Cancrum possumus vocatur caesarumque fulmina prospiciunt eodem, umbras. Heu mihi Venerisque igni exitioque novercam ambagibus sequuntur repente alterno! Pulcherrima omnia iuvenis, ora flexisque nefandis modo letifera concipiunt alveus corneaque en premente, fessus procorum. Mollit astra, diro laboro et terret notam igni ora solebat satis subsidere quod terrebit! Fessum his caros Pharsalia facta enodisque potiere fulvo, et moveant caput.","title":"Vibrantia aureae constantia generi repressit Pentheus religatam"},{"location":"hello/","text":"hello this is the main page.","title":"hello"},{"location":"hello/#hello","text":"this is the main page.","title":"hello"},{"location":"notes/- -/","text":"<- -> std::string & QString std::string -> QString std :: string target = QString :: fromStdString ( source ); QString & int QString -> int QString source = \"12\" ; int target = source . toInt (); QString -> QDateTime QString strBuffer ; QDateTime time ; strBuffer = \"2010-07-02 17:35:00\" ; time = QDateTime :: fromString ( strBuffer , \"yyyy-MM-dd hh:mm:ss\" );","title":"<- ->"},{"location":"notes/- -/#-","text":"std::string & QString std::string -> QString std :: string target = QString :: fromStdString ( source ); QString & int QString -> int QString source = \"12\" ; int target = source . toInt ();","title":"&lt;- -&gt;"},{"location":"notes/- -/#qstring-qdatetime","text":"QString strBuffer ; QDateTime time ; strBuffer = \"2010-07-02 17:35:00\" ; time = QDateTime :: fromString ( strBuffer , \"yyyy-MM-dd hh:mm:ss\" );","title":"QString -&gt; QDateTime"},{"location":"notes/C++\ud83e\udd19map/","text":"C++ map <QString, vector <ClassType> > \u5b9a\u4e49 key\u662f\u5426\u5b58\u5728 if ( _map . count ( key ) == 1 ) { // exists} if ( _map . count ( key ) == 0 ) { // doesn't exist}","title":"C++\ud83e\udd19map"},{"location":"notes/C++\ud83e\udd19map/#cmap","text":"<QString, vector <ClassType> >","title":"C++map"},{"location":"notes/C++\ud83e\udd19map/#_1","text":"","title":"\u5b9a\u4e49"},{"location":"notes/C++\ud83e\udd19map/#key","text":"if ( _map . count ( key ) == 1 ) { // exists} if ( _map . count ( key ) == 0 ) { // doesn't exist}","title":"key\u662f\u5426\u5b58\u5728"},{"location":"notes/C++\ud83e\udd19vector/","text":"C++ vector vector\u67e5\u627e\u5143\u7d20 std :: vector < int > arr = { 5 , 4 , 3 , 2 , 1 }; int ele = 1 ; std :: vector < int >:: iterator result = std :: find ( arr . begin (), arr . end (), ele ); if ( result != arr . end ()) { for ( std :: vector < int >:: iterator it = arr . begin (); it != result ; it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; for ( std :: vector < int >:: iterator it = result + 1 ; it != arr . end (); it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; } sub vector < T >:: const_iterator first = myVec . begin () + 100000 ; vector < T >:: const_iterator last = myVec . begin () + 101000 ; vector < T > newVec ( first , last ); front l","title":"C++\ud83e\udd19vector"},{"location":"notes/C++\ud83e\udd19vector/#cvector","text":"vector\u67e5\u627e\u5143\u7d20 std :: vector < int > arr = { 5 , 4 , 3 , 2 , 1 }; int ele = 1 ; std :: vector < int >:: iterator result = std :: find ( arr . begin (), arr . end (), ele ); if ( result != arr . end ()) { for ( std :: vector < int >:: iterator it = arr . begin (); it != result ; it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; for ( std :: vector < int >:: iterator it = result + 1 ; it != arr . end (); it ++ ) { std :: cout << * it << \" \" ; } std :: cout << std :: endl ; } sub vector < T >:: const_iterator first = myVec . begin () + 100000 ; vector < T >:: const_iterator last = myVec . begin () + 101000 ; vector < T > newVec ( first , last ); front l","title":"C++vector"},{"location":"notes/C++\ud83e\udd19\u7ed3\u6784\u4f53/","text":"C++ \u7ed3\u6784\u4f53 struct StudentClassInfo { }; typedef boost :: shared_ptr < StudentClassInfo > StudentClassInfoPtr ; StudentClassInfoPtr classInfo = boost :: make_shared < StudentClassInfo > ();","title":"C++\ud83e\udd19\u7ed3\u6784\u4f53"},{"location":"notes/C++\ud83e\udd19\u7ed3\u6784\u4f53/#c","text":"struct StudentClassInfo { }; typedef boost :: shared_ptr < StudentClassInfo > StudentClassInfoPtr ; StudentClassInfoPtr classInfo = boost :: make_shared < StudentClassInfo > ();","title":"C++\u7ed3\u6784\u4f53"},{"location":"notes/CMD/","text":"CMD MD5\u3001SHA1\u3001SHA256 certutil -hashfile <filename> MD5 certutil -hashfile <filename> SHA1 certutil -hashfile <filename> SHA256","title":"CMD"},{"location":"notes/CMD/#cmd","text":"MD5\u3001SHA1\u3001SHA256 certutil -hashfile <filename> MD5 certutil -hashfile <filename> SHA1 certutil -hashfile <filename> SHA256","title":"CMD"},{"location":"notes/Github/","text":"Github w3-goto-world \u4e0b\u8f7d\u9879\u76ee\u5206\u652f git clone -b gh-pages https://github.com/ant-design/ant-design.git .gitignore echo \"site/\" >> .gitignore","title":"Github"},{"location":"notes/Github/#github","text":"w3-goto-world \u4e0b\u8f7d\u9879\u76ee\u5206\u652f git clone -b gh-pages https://github.com/ant-design/ant-design.git .gitignore echo \"site/\" >> .gitignore","title":"Github"},{"location":"notes/JS-Array/","text":"JS-Array sort const heights = new Array ( 9 , 8 , 7 , 6 , 5 , 4 ); heights . sort (( a , b ) => { return a <= b ? - 1 : 1 }); \u589e const arr = new Array (); arr . push ( 9 ); // [9] arr . push ( 10 ); // [9, 10]","title":"JS-Array"},{"location":"notes/JS-Array/#js-array","text":"","title":"JS-Array"},{"location":"notes/JS-Array/#sort","text":"const heights = new Array ( 9 , 8 , 7 , 6 , 5 , 4 ); heights . sort (( a , b ) => { return a <= b ? - 1 : 1 });","title":"sort"},{"location":"notes/JS-Array/#_1","text":"const arr = new Array (); arr . push ( 9 ); // [9] arr . push ( 10 ); // [9, 10]","title":"\u589e"},{"location":"notes/JS-Fetch/","text":"JS-Fetch npm i node-fetch --save const fetch = require(\"node-fetch\");","title":"JS-Fetch"},{"location":"notes/JS-Fetch/#js-fetch","text":"npm i node-fetch --save const fetch = require(\"node-fetch\");","title":"JS-Fetch"},{"location":"notes/JS-Numbers/","text":"JS-Numbers .toString() Number.parseInt(string,[ radix ]) string The value to parse. If the string argument is not a string, then it is converted to a string (using the ToString abstract operation). Leading whitespace in the string argument is ignored. radix An integer between 2 and 36 that represents the radix (the base in mathematical numeral systems) of the above mentioned string.","title":"JS-Numbers"},{"location":"notes/JS-Numbers/#js-numbers","text":".toString() Number.parseInt(string,[ radix ]) string The value to parse. If the string argument is not a string, then it is converted to a string (using the ToString abstract operation). Leading whitespace in the string argument is ignored. radix An integer between 2 and 36 that represents the radix (the base in mathematical numeral systems) of the above mentioned string.","title":"JS-Numbers"},{"location":"notes/JS-String/","text":"JS-String Props .length \"Nice!\" . length ; // 5 .includes(searchString) \"Hello World\" . includes ( \"World\" ); // true \"Hello World\" . includes ( \"Potato\" ); // false .toUpperCase() \"hello\" . toUpperCase (); // \"HELLO\" .toLowerCase() \"NICe\" . toLowerCase (); // \"nice\"; substring(indexStart, indexEnd) * indexStart: the position of the first character you'd like to include * indexEnd: \u53ef\u7701\u7565\uff0cthe position of the first character you'd like to ignore const language = \"JavaScript\" ; language . substring ( 1 , 4 ); //\"ava\" language . substring ( 4 ); //\"Script\" Template strings `This is a multiline string that just works!` `I am learning ${ language } ` ; .startsWith(serchString) .endsWith(searchString) const phoneNumber = \"+103123456\" ; phoneNumber . startsWith ( \"+\" ); //true phoneNumber . startsWith ( \"10\" ); //false phoneNumber . endsWith ( \"56\" ); // true .trim() var greeting = ' Hello world! ' ; console . log ( greeting . trim ()); // expected output: \"Hello world!\";","title":"JS-String"},{"location":"notes/JS-String/#js-string","text":"","title":"JS-String"},{"location":"notes/JS-String/#props","text":".length \"Nice!\" . length ; // 5 .includes(searchString) \"Hello World\" . includes ( \"World\" ); // true \"Hello World\" . includes ( \"Potato\" ); // false .toUpperCase() \"hello\" . toUpperCase (); // \"HELLO\" .toLowerCase() \"NICe\" . toLowerCase (); // \"nice\"; substring(indexStart, indexEnd) * indexStart: the position of the first character you'd like to include * indexEnd: \u53ef\u7701\u7565\uff0cthe position of the first character you'd like to ignore const language = \"JavaScript\" ; language . substring ( 1 , 4 ); //\"ava\" language . substring ( 4 ); //\"Script\" Template strings `This is a multiline string that just works!` `I am learning ${ language } ` ; .startsWith(serchString) .endsWith(searchString) const phoneNumber = \"+103123456\" ; phoneNumber . startsWith ( \"+\" ); //true phoneNumber . startsWith ( \"10\" ); //false phoneNumber . endsWith ( \"56\" ); // true .trim() var greeting = ' Hello world! ' ; console . log ( greeting . trim ()); // expected output: \"Hello world!\";","title":"Props"},{"location":"notes/JS-Types/","text":"JS-Types number string boolean null undefined object symbol object\u62f7\u8d1d\u5f15\u7528\uff0c\u5176\u4ed6\u90fd\u662f\u62f7\u8d1d\u503c","title":"JS-Types"},{"location":"notes/JS-Types/#js-types","text":"number string boolean null undefined object symbol object\u62f7\u8d1d\u5f15\u7528\uff0c\u5176\u4ed6\u90fd\u662f\u62f7\u8d1d\u503c","title":"JS-Types"},{"location":"notes/JS-\u6ce8\u91ca/","text":"JS-\u6ce8\u91ca /** * @param {string} name */ function getNameLength ( name ){ return name . length ; }","title":"JS-\u6ce8\u91ca"},{"location":"notes/JS-\u6ce8\u91ca/#js-","text":"/** * @param {string} name */ function getNameLength ( name ){ return name . length ; }","title":"JS-\u6ce8\u91ca"},{"location":"notes/JSON API/","text":"JSON API https://www.jsonstore.io/da0787aa5362aadf9c50997935e11ed8820e70cf324329124a1663e440f66498/","title":"JSON API"},{"location":"notes/JSON API/#json-api","text":"https://www.jsonstore.io/da0787aa5362aadf9c50997935e11ed8820e70cf324329124a1663e440f66498/","title":"JSON API"},{"location":"notes/Money Poll/","text":"Money Poll \u603b\u8ba1\uff1a80=80 2019-09-21|\u5468\u516d: +10, \u52a0\u73ed 2019-09-22|\u5468\u65e5: +10, \u52a0\u73ed 2019-09-23|\u5468\u4e00: +10, \u4e0d\u52a0\u73ed 2019-09-24|\u5468\u4e8c: +10, solve 938. Range Sum of BST 2019-09-27|\u5468\u4e94: +20, \u901b\u590d\u65e6|\u901b\u540c\u6d4e 2019-09-28|\u5468\u516d: +20, \u7533\u8bf7\u4f4f\u623f\u8865\u8d34\uff1b\u91cd\u65b0\u8d2d\u4e70\u4e86\u5b9c\u5bb6\u7684\u67b6\u5b50","title":"Money Poll"},{"location":"notes/Money Poll/#money-poll","text":"","title":"Money Poll"},{"location":"notes/Money Poll/#8080","text":"2019-09-21|\u5468\u516d: +10, \u52a0\u73ed 2019-09-22|\u5468\u65e5: +10, \u52a0\u73ed 2019-09-23|\u5468\u4e00: +10, \u4e0d\u52a0\u73ed 2019-09-24|\u5468\u4e8c: +10, solve 938. Range Sum of BST 2019-09-27|\u5468\u4e94: +20, \u901b\u590d\u65e6|\u901b\u540c\u6d4e 2019-09-28|\u5468\u516d: +20, \u7533\u8bf7\u4f4f\u623f\u8865\u8d34\uff1b\u91cd\u65b0\u8d2d\u4e70\u4e86\u5b9c\u5bb6\u7684\u67b6\u5b50","title":"\u603b\u8ba1\uff1a80=80"},{"location":"notes/QT\ud83e\udd19Json/","text":"QT Json QJsonObject QJsonArray \u6784\u9020 // \u5355\u4e2ajson\u5bf9\u8c61 QJsonObject object { { \"property1\" , 1 }, { \"property2\" , 2 } }; { property1: 1, property2: 2 } * QJsonArray QJsonArray flags { QJsonObject {{ \"flag1\" , ui -> checkBoxFlag1 -> isChecked ()}}, QJsonObject {{ \"flag4\" , ui -> checkBoxFlag4 -> isChecked ()}} }; \u8f6c\u6362 QJsonObject -> QString QJsonObject jsonObj ; // assume this has been populated with Json data QJsonDocument doc ( jsonObj ); QString strJson ( doc . toJson ( QJsonDocument :: Compact )); QJsonArray -> QString QJsonArray data ; QJsonDocument doc ; doc . setArray ( data ); QString dataToString ( doc . toJson ()); Reference \u89e3\u6790 Qt parsing JSON using QJsonDocument, QJsonObject, QJsonArray Qt\u4e4bJSON\u6559\u7a0b","title":"QT\ud83e\udd19Json"},{"location":"notes/QT\ud83e\udd19Json/#qtjson","text":"QJsonObject QJsonArray","title":"QTJson"},{"location":"notes/QT\ud83e\udd19Json/#_1","text":"// \u5355\u4e2ajson\u5bf9\u8c61 QJsonObject object { { \"property1\" , 1 }, { \"property2\" , 2 } }; { property1: 1, property2: 2 } * QJsonArray QJsonArray flags { QJsonObject {{ \"flag1\" , ui -> checkBoxFlag1 -> isChecked ()}}, QJsonObject {{ \"flag4\" , ui -> checkBoxFlag4 -> isChecked ()}} };","title":"\u6784\u9020"},{"location":"notes/QT\ud83e\udd19Json/#_2","text":"QJsonObject -> QString QJsonObject jsonObj ; // assume this has been populated with Json data QJsonDocument doc ( jsonObj ); QString strJson ( doc . toJson ( QJsonDocument :: Compact )); QJsonArray -> QString QJsonArray data ; QJsonDocument doc ; doc . setArray ( data ); QString dataToString ( doc . toJson ());","title":"\u8f6c\u6362"},{"location":"notes/QT\ud83e\udd19Json/#reference","text":"","title":"Reference"},{"location":"notes/QT\ud83e\udd19Json/#_3","text":"Qt parsing JSON using QJsonDocument, QJsonObject, QJsonArray Qt\u4e4bJSON\u6559\u7a0b","title":"\u89e3\u6790"},{"location":"notes/React\ud83e\udd19Template/","text":"React Template \u5934\u6587\u4ef6 import React , { Component } from 'react' ; import ReactDOM from 'react-dom' ; setState\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 handleClickOnLikeButton () { this.setState((prevState) => { return { count: 0 } }) this.setState((prevState) => { return { count: prevState.count + 1 } // \u4e0a\u4e00\u4e2a setState \u7684\u8fd4\u56de\u662f count \u4e3a 0\uff0c\u5f53\u524d\u8fd4\u56de 1 }) this.setState((prevState) => { return { count: prevState.count + 2 } // \u4e0a\u4e00\u4e2a setState \u7684\u8fd4\u56de\u662f count \u4e3a 1\uff0c\u5f53\u524d\u8fd4\u56de 3 }) // \u6700\u540e\u7684\u7ed3\u679c\u662f this.state.count \u4e3a 3 } ...","title":"React\ud83e\udd19Template"},{"location":"notes/React\ud83e\udd19Template/#reacttemplate","text":"","title":"ReactTemplate"},{"location":"notes/React\ud83e\udd19Template/#_1","text":"import React , { Component } from 'react' ; import ReactDOM from 'react-dom' ;","title":"\u5934\u6587\u4ef6"},{"location":"notes/React\ud83e\udd19Template/#setstate","text":"handleClickOnLikeButton () { this.setState((prevState) => { return { count: 0 } }) this.setState((prevState) => { return { count: prevState.count + 1 } // \u4e0a\u4e00\u4e2a setState \u7684\u8fd4\u56de\u662f count \u4e3a 0\uff0c\u5f53\u524d\u8fd4\u56de 1 }) this.setState((prevState) => { return { count: prevState.count + 2 } // \u4e0a\u4e00\u4e2a setState \u7684\u8fd4\u56de\u662f count \u4e3a 1\uff0c\u5f53\u524d\u8fd4\u56de 3 }) // \u6700\u540e\u7684\u7ed3\u679c\u662f this.state.count \u4e3a 3 } ...","title":"setState\u63a5\u6536\u4e00\u4e2a\u53c2\u6570"},{"location":"notes/React\ud83e\udd19\u751f\u547d\u5468\u671f/","text":"React \u751f\u547d\u5468\u671f Mount constructor() componentWillMount() render() \u6784\u9020DOM componentDidMount() UNMount componentWillUnmount()","title":"React\ud83e\udd19\u751f\u547d\u5468\u671f"},{"location":"notes/React\ud83e\udd19\u751f\u547d\u5468\u671f/#react","text":"","title":"React\u751f\u547d\u5468\u671f"},{"location":"notes/React\ud83e\udd19\u751f\u547d\u5468\u671f/#mount","text":"constructor() componentWillMount() render() \u6784\u9020DOM componentDidMount()","title":"Mount"},{"location":"notes/React\ud83e\udd19\u751f\u547d\u5468\u671f/#unmount","text":"componentWillUnmount()","title":"UNMount"},{"location":"notes/Ruanyf/","text":"Ruanyf \u6559\u7a0b React - Basic Theoretical Concepts","title":"Ruanyf"},{"location":"notes/Ruanyf/#ruanyf","text":"","title":"Ruanyf"},{"location":"notes/Ruanyf/#_1","text":"React - Basic Theoretical Concepts","title":"\u6559\u7a0b"},{"location":"notes/Software List/","text":"Software List Windows IObit-Uninstaller","title":"Software List"},{"location":"notes/Software List/#software-list","text":"","title":"Software List"},{"location":"notes/Software List/#windows","text":"IObit-Uninstaller","title":"Windows"},{"location":"notes/Terminal/","text":"Terminal \u6740\u6389\u5360\u7528\u67d0\u4e2a\u7aef\u53e3\u7684\u8fdb\u7a0b lsof -i:8000 kill -9 pid MD5\u3001SHA1\u3001SHA256 Windows certutil -hashfile <filename> MD5 certutil -hashfile <filename> SHA1 certutil -hashfile <filename> SHA256 Mac md5 <filename> shasum -a 1 <filename> # SHA1 shasum -a 256 <filename> # SHA256","title":"Terminal"},{"location":"notes/Terminal/#terminal","text":"","title":"Terminal"},{"location":"notes/Terminal/#_1","text":"lsof -i:8000 kill -9 pid","title":"\u6740\u6389\u5360\u7528\u67d0\u4e2a\u7aef\u53e3\u7684\u8fdb\u7a0b"},{"location":"notes/Terminal/#md5sha1sha256","text":"Windows certutil -hashfile <filename> MD5 certutil -hashfile <filename> SHA1 certutil -hashfile <filename> SHA256 Mac md5 <filename> shasum -a 1 <filename> # SHA1 shasum -a 256 <filename> # SHA256","title":"MD5\u3001SHA1\u3001SHA256"},{"location":"notes/Untitled (2)/","text":"Untitled (2)","title":"Untitled (2)"},{"location":"notes/Untitled (2)/#untitled-2","text":"","title":"Untitled (2)"},{"location":"notes/Untitled (3)/","text":"Untitled (3) \u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u81ea\u52a8\u805a\u7126\u5230\u8bc4\u8bba\u8f93\u5165\u6846\u3002 \u628a\u7528\u6237\u540d\u6301\u4e45\u5316\uff0c\u5b58\u653e\u5230\u6d4f\u89c8\u5668\u7684 LocalStorage \u4e2d\u3002\u9875\u9762\u52a0\u8f7d\u65f6\u4f1a\u628a\u7528\u6237\u540d\u52a0\u8f7d\u51fa\u6765\u663e\u793a\u5230\u8f93\u5165\u6846\uff0c\u7528\u6237\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u8f93\u5165\u7528\u6237\u540d\u4e86\u3002 \u628a\u5df2\u7ecf\u53d1\u5e03\u7684\u8bc4\u8bba\u6301\u4e45\u5316\uff0c\u5b58\u653e\u5230\u6d4f\u89c8\u5668\u7684 LocalStorage \u4e2d\u3002\u9875\u9762\u52a0\u8f7d\u65f6\u4f1a\u628a\u5df2\u7ecf\u4fdd\u5b58\u7684\u8bc4\u8bba\u52a0\u8f7d\u51fa\u6765\uff0c\u663e\u793a\u5230\u9875\u9762\u7684\u8bc4\u8bba\u5217\u8868\u4e0a\u3002 \u8bc4\u8bba\u663e\u793a\u53d1\u5e03\u65e5\u671f\uff0c\u5982\u201c1 \u79d2\u524d\u201d\uff0c\u201d30 \u5206\u949f\u524d\u201d\uff0c\u5e76\u4e14\u4f1a\u6bcf\u9694 5 \u79d2\u66f4\u65b0\u53d1\u5e03\u65e5\u671f\u3002 \u8bc4\u8bba\u53ef\u4ee5\u88ab\u5220\u9664\u3002 \u7c7b\u4f3c Markdown \u7684\u884c\u5185\u4ee3\u7801\u5757\u663e\u793a\u529f\u80fd\uff0c\u7528\u6237\u8f93\u5165\u7684\u7528 ` \u5305\u542b\u8d77\u6765\u7684\u5185\u5bb9\u90fd\u4f1a\u88ab\u5904\u7406\u6210\u7528 <code> \u5143\u7d20\u5305\u542b\u3002\u4f8b\u5982\u8f93\u5165 console.log` \u5c31\u4f1a\u5904\u7406\u6210 console.log \u518d\u663e\u793a\u5230\u9875\u9762\u4e0a\u3002","title":"Untitled (3)"},{"location":"notes/Untitled (3)/#untitled-3","text":"\u9875\u9762\u52a0\u8f7d\u5b8c\u6210\u81ea\u52a8\u805a\u7126\u5230\u8bc4\u8bba\u8f93\u5165\u6846\u3002 \u628a\u7528\u6237\u540d\u6301\u4e45\u5316\uff0c\u5b58\u653e\u5230\u6d4f\u89c8\u5668\u7684 LocalStorage \u4e2d\u3002\u9875\u9762\u52a0\u8f7d\u65f6\u4f1a\u628a\u7528\u6237\u540d\u52a0\u8f7d\u51fa\u6765\u663e\u793a\u5230\u8f93\u5165\u6846\uff0c\u7528\u6237\u5c31\u4e0d\u9700\u8981\u91cd\u65b0\u8f93\u5165\u7528\u6237\u540d\u4e86\u3002 \u628a\u5df2\u7ecf\u53d1\u5e03\u7684\u8bc4\u8bba\u6301\u4e45\u5316\uff0c\u5b58\u653e\u5230\u6d4f\u89c8\u5668\u7684 LocalStorage \u4e2d\u3002\u9875\u9762\u52a0\u8f7d\u65f6\u4f1a\u628a\u5df2\u7ecf\u4fdd\u5b58\u7684\u8bc4\u8bba\u52a0\u8f7d\u51fa\u6765\uff0c\u663e\u793a\u5230\u9875\u9762\u7684\u8bc4\u8bba\u5217\u8868\u4e0a\u3002 \u8bc4\u8bba\u663e\u793a\u53d1\u5e03\u65e5\u671f\uff0c\u5982\u201c1 \u79d2\u524d\u201d\uff0c\u201d30 \u5206\u949f\u524d\u201d\uff0c\u5e76\u4e14\u4f1a\u6bcf\u9694 5 \u79d2\u66f4\u65b0\u53d1\u5e03\u65e5\u671f\u3002 \u8bc4\u8bba\u53ef\u4ee5\u88ab\u5220\u9664\u3002 \u7c7b\u4f3c Markdown \u7684\u884c\u5185\u4ee3\u7801\u5757\u663e\u793a\u529f\u80fd\uff0c\u7528\u6237\u8f93\u5165\u7684\u7528 ` \u5305\u542b\u8d77\u6765\u7684\u5185\u5bb9\u90fd\u4f1a\u88ab\u5904\u7406\u6210\u7528 <code> \u5143\u7d20\u5305\u542b\u3002\u4f8b\u5982\u8f93\u5165 console.log` \u5c31\u4f1a\u5904\u7406\u6210 console.log \u518d\u663e\u793a\u5230\u9875\u9762\u4e0a\u3002","title":"Untitled (3)"},{"location":"notes/Untitled (4)/","text":"Untitled (4) < script src = \"//unpkg.com/vue/dist/vue.js\" ></ script > < script src = \"//unpkg.com/element-ui@2.12.0/lib/index.js\" ></ script > < div id = \"app\" > < template > < el - table : data = \"tableData\" style = \"width: 100%\" > < el - table - column type = \"expand\" prop = \"names\" > < template slot - scope = \"scope\" > < el - table : data = \"scope.row.names\" > < el - table - column prop = \"name\" label = \"\u540d\u79f0\" > < template slot - scope = \"scope\" > < span > {{ scope . row . name }} </ span > </ template > </ el - table - column > < el - table - column prop = \"num\" label = \"\u6570\u91cf\" > < template slot - scope = \"scope\" > < span > {{ scope . row . num }} </ span > </ template > </ el - table - column > </ el - table > </ template > </ el - table - column > < el - table - column label = \"\u5546\u54c1 ID\" prop = \"id\" > </ el - table - column > < el - table - column label = \"\u5546\u54c1\u540d\u79f0\" prop = \"name\" > </ el - table - column > < el - table - column label = \"\u63cf\u8ff0\" prop = \"desc\" > </ el - table - column > </ el - table > </ template > </ div > @ import url ( \"//unpkg.com/element-ui@2.12.0/lib/theme-chalk/index.css\" ); . demo - table - expand { font - size : 0 ; } . demo - table - expand label { width : 90 px ; color : # 99 a9bf ; } . demo - table - expand . el - form - item { margin - right : 0 ; margin - bottom : 0 ; width : 50 % ; } var Main = { data() { return { tableData: [{ names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987122', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple1', num:1}, {name: 'androi2d', num:2}], id: '12987123', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987125', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987126', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }] } } } var Ctor = Vue.extend(Main) new Ctor().$mount('#app')","title":"Untitled (4)"},{"location":"notes/Untitled (4)/#untitled-4","text":"< script src = \"//unpkg.com/vue/dist/vue.js\" ></ script > < script src = \"//unpkg.com/element-ui@2.12.0/lib/index.js\" ></ script > < div id = \"app\" > < template > < el - table : data = \"tableData\" style = \"width: 100%\" > < el - table - column type = \"expand\" prop = \"names\" > < template slot - scope = \"scope\" > < el - table : data = \"scope.row.names\" > < el - table - column prop = \"name\" label = \"\u540d\u79f0\" > < template slot - scope = \"scope\" > < span > {{ scope . row . name }} </ span > </ template > </ el - table - column > < el - table - column prop = \"num\" label = \"\u6570\u91cf\" > < template slot - scope = \"scope\" > < span > {{ scope . row . num }} </ span > </ template > </ el - table - column > </ el - table > </ template > </ el - table - column > < el - table - column label = \"\u5546\u54c1 ID\" prop = \"id\" > </ el - table - column > < el - table - column label = \"\u5546\u54c1\u540d\u79f0\" prop = \"name\" > </ el - table - column > < el - table - column label = \"\u63cf\u8ff0\" prop = \"desc\" > </ el - table - column > </ el - table > </ template > </ div > @ import url ( \"//unpkg.com/element-ui@2.12.0/lib/theme-chalk/index.css\" ); . demo - table - expand { font - size : 0 ; } . demo - table - expand label { width : 90 px ; color : # 99 a9bf ; } . demo - table - expand . el - form - item { margin - right : 0 ; margin - bottom : 0 ; width : 50 % ; } var Main = { data() { return { tableData: [{ names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987122', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple1', num:1}, {name: 'androi2d', num:2}], id: '12987123', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987125', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }, { names:[{name: 'apple', num:1}, {name: 'android', num:2}], id: '12987126', name: '\u597d\u6ecb\u597d\u5473\u9e21\u86cb\u4ed4', category: '\u6c5f\u6d59\u5c0f\u5403\u3001\u5c0f\u5403\u96f6\u98df', desc: '\u8377\u5170\u4f18\u8d28\u6de1\u5976\uff0c\u5976\u9999\u6d53\u800c\u4e0d\u817b', address: '\u4e0a\u6d77\u5e02\u666e\u9640\u533a\u771f\u5317\u8def', shop: '\u738b\u5c0f\u864e\u592b\u59bb\u5e97', shopId: '10333' }] } } } var Ctor = Vue.extend(Main) new Ctor().$mount('#app')","title":"Untitled (4)"},{"location":"notes/Untitled/","text":"Untitled","title":"Untitled"},{"location":"notes/Untitled/#untitled","text":"","title":"Untitled"},{"location":"notes/Welcome to Notable \ud83d\ude4b/","text":"Welcome to Notable :raising_hand_woman: Tutorial Some tutorial notes have been added to your data directory. They will guide you towards the main features Notable provides. Once you're done exploring feel free to permanently delete them, if at any point you'd like to read them again you can re-add them to your data directory or just read the online version via the Help -> Tutorial menu item.","title":"Welcome to Notable \ud83d\ude4b"},{"location":"notes/Welcome to Notable \ud83d\ude4b/#welcome-to-notable-raising_hand_woman","text":"","title":"Welcome to Notable :raising_hand_woman:"},{"location":"notes/Welcome to Notable \ud83d\ude4b/#tutorial","text":"Some tutorial notes have been added to your data directory. They will guide you towards the main features Notable provides. Once you're done exploring feel free to permanently delete them, if at any point you'd like to read them again you can re-add them to your data directory or just read the online version via the Help -> Tutorial menu item.","title":"Tutorial"},{"location":"notes/Wrapping up \ud83c\udf89/","text":"Wrapping up Awesome, you've reached the end of the tutorial! The next step is deleting all these tutorial notes, you can do this one-by-one, using multi-note editing, or you could just trash the whole notes sub-directory from your data directory. Feedback If you've reached this far chances are you're considering using Notable as your main note-taking app, that's great! Feel free to contact us about any issues you may encounter, any features suggestions and generally sharing your opinion about Notable and how we can improve it. You can also find us in the /r/Notable subreddit. If you want to support me directly I also have a Patreon page . Have a wonderful day!","title":"Wrapping up \ud83c\udf89"},{"location":"notes/Wrapping up \ud83c\udf89/#wrapping-up","text":"Awesome, you've reached the end of the tutorial! The next step is deleting all these tutorial notes, you can do this one-by-one, using multi-note editing, or you could just trash the whole notes sub-directory from your data directory.","title":"Wrapping up"},{"location":"notes/Wrapping up \ud83c\udf89/#feedback","text":"If you've reached this far chances are you're considering using Notable as your main note-taking app, that's great! Feel free to contact us about any issues you may encounter, any features suggestions and generally sharing your opinion about Notable and how we can improve it. You can also find us in the /r/Notable subreddit. If you want to support me directly I also have a Patreon page . Have a wonderful day!","title":"Feedback"},{"location":"notes/cheat-sheet/","text":"TL;DR Cheat Sheet For a 60 second quick start on Markdown commonmark has a great tutorial Emphasis this is _italic_ and so is *this* this is __bold__ and so is **this** ^^underline^^, ~~strike through~~ ==highlight== and `inline code` ==*you* **can** ^^combine^^ `too` == this is italic and so is this this is bold and so is this underline , ~~strike through~~ highlight and inline code you can combine ~~too~~ Soft & Hard Line Breaks Put 2 spaces at the end of a line to force a line break. If you simply hit enter and don't use 2 spaces it merges the lines like this. You can also force a break <br> anywhere using the `<br>` tag like we just did Put 2 spaces at the end of a line to force a line break. If you simply hit enter and don't use 2 spaces it merges the lines like this You can also force a break anywhere using the <br> tag like we just did Lists * need a blank line above to start new list + valid bullet symbols + `*` , `-` or '+' - 4 spaces or 1 tab - to indent 1. use *numbers* for ordered * can nest 2. **numbers** can be in order 3. can also nest 1. but it will fix them if not - list item with two paragraphs. anything like this paragraph should be indented by 4 spaces or a tab - you can add blocks too > :memo: > > * list under lists > * under lists need a blank line above to start new list valid bullet symbols * , - or '+' 4 spaces or 1 tab to indent use numbers for ordered can nest numbers can be in order can also nest but it will fix them if not list item with two paragraphs. anything like this paragraph should be indented by 4 spaces or a tab you can add blocks too list under lists under lists Tasks - [ ] Task Lists `- [ ]` - [x] x instead of space - [x] will mark it complete - [ ] work just like lists * can can contain indents * or anything else a list can 1. Or can be nested under others lists - [ ] like this - [ ] and this 2. This can help - [ ] like this - [ ] and this Task Lists - [ ] x instead of space will mark it complete work just like lists can can contain indents or anything else a list can Or can be nested under others lists like this and this This can help like this and this Links [ simple link ]( https://www.google.com ) [ with optional title ]( https://www.google.com \"Google's Homepage\" ) point to a [ relative file or md ]( ./embedding/lucid.md ) or mail link with emoji [ \ud83d\udce7 ]( mailto:joshdev@9ci.com ) or click this cloud icon to see the list of icon options [ _cloud_{.icon} ]( https://material.io/icons/ ) or [ use an image ![ ]( images/dingus/image-small.png )](images/dingus/image.png) [Reference-Style Links][some reference id] put link at bottom of paragraph or page. you can use numbers or text for [reference-style link definitions][1] or leave it empty and just use the [link text itself] to [ open in new tab ]( sandbox.md ){.new-tab} use `{target=_blank} or {.new-tab}` attributes use it on [ref links][new tab]{.new-tab} too Indenting _reference links_ 2 spaces is not required but a recommended convention [some reference id]: https://daringfireball.net/projects/markdown/syntax#link [1]: http://reason.com/blog [link text itself]: ./images/material.png [new tab]: sandbox.md simple link with optional title point to a relative file or md or mail link with emoji \ud83d\udce7 or click this cloud icon to see the list of icon options cloud or use an image Reference-Style Links put link at bottom of paragraph or page. you can use numbers or text for reference-style link definitions or leave it empty and just use the link text itself to open in new tab us {target=_blank} or {.new-tab} attributes use it on ref links too reference links can be at bottom of paragraph. Indenting 2 spaces is not required but a recommended convention Images inline ![](images/dingus/image-small.png) with alt text ![ foo ]( images/dingus/image-small.png ) with ref links ![img-small][] can use [ sizing attributes ]( blocks/#sizing-alignment ) Put `zoomify` in the alt text bracket to enable clicking to zoom. Try clicking on any of these images ![zoomify][img-dingus]{.tiny} ![ zoomify ]( images/dingus/image.png ){.center .xsmall} > :camera: **Figure Title** > ![zoomify](images/dingus/image.png){.center .small} [img-small]: ./images/dingus/image-small.png [img-dingus]: ./images/dingus/image.png inline with alt text with ref links can use sizing attributes Put zoomify in the alt text bracket to enable clicking to zoom. Try it on any of these images Figure Title Abbreviations here are some abbr's HTML and FUBAR >:bulb: if your editor gets confused by not having and enclosing * then just add it to end of abbr def. --- >:warning: Don't indent these, doesn't seem to work *[abbr]: Abbreviations *[def]: Definition *[HTML]: Hyper Text Markup Language *[FUBAR]: You know what it means* here are some abbr 's HTML and FUBAR if your editor gets confused by not having and enclosing * then just add it to end of abbr def . Don't indent these, doesn't seem to work Footnotes Footnotes[^1] work like reference links They auto-number like ordered lists[^3] You can use any reference id[^text reference] like ref links they can be organized at bottom of paragraph or page. [^1]: footnote, click the return icon here to go back -> [^3]: the number will not necessarily be what you use [^text reference]: text reference Footnotes 1 work like reference links They auto-number like ordered lists 2 You can use any reference id 3 like ref links they can be organized at bottom of paragraph or page. Tables Colons can be used to align columns . 3 dashes min to separate headers . Outer pipes (|) are optional , and you don ' t need to make the raw Markdown line up prettily . You can also use inline Markdown . | Tables | Are | Cool | | -------- |:- ------------: | ---------: | | col 3 is | right - aligned | $ 1600 | | col 2 is | centered | $ 12 | | | ** Total ** | ** $ 1612 ** | == Table == | ** Format ** | \ud83d\udc40 _ scramble_ --- | --- | --- * Still * | ` renders ` | **nicely** [ with links ]( images / dingus / image - small . png ) | images ![ zoomify ]( images / dingus / image - small . png ){. tiny } | emojis \ud83c\udf54 icons _ cloud_ {. icon } | footnotes [ ^ 1 ] | use ` < br> ` < br > for multi - line < br > line breaks Colons can be used to align columns. 3 dashes min to separate headers. Outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 Total $1612 Table Format \ud83d\udc40 fun Still renders nicely with links images emojis \ud83c\udf54 icons cloud footnotes 1 use <br> for multi-line line breaks Blockquotes > Blockquotes are handy to callout text. they are greedy and will keep grabbing text. The '>' is optional unless trying join > paragraphs, tables etc. a blank line and a new paragraph or other markdown thing end them >:bulb: use a `---` seperator or `<br>` if you want multiple sepearte block quotes --- > can have nested > > blockquotes inside of block quotes block quotes can also contain any valid markdown Blockquotes are handy to callout text. they are greedy and will keep grabbing text. The '>' is optional unless trying join paragraphs, tables etc. a blank line and a new paragraph or other markdown thing end them use a --- seperator or <br> if you want multiple seperate block quotes to follow can have nested blockquotes inside of block quotes block quotes can also contain any valid markdown Blocks - admonitions, callouts, sidebars > :memo: **Memo Admonition** use blockquotes with emoji indicators for admonition memos, callout etc.. --- > :boom: Title title like above is optional --- > :bulb: See [the section about blocks](blocks.md#cheatsheet) for the list of emojis that can be used. Memo Admonition use blockquotes with emoji indicators for admonition memos, callout etc.. Title title like above is optional See the section about blocks for the list of emojis that can be used. Row Divs through out this doc we have been using a <div markdown=\"1\" class=\"two-column\"> . <div markdown= \"1\" class= \"two-column\" > markdown=\"1\" tells it to process what inside <-needs to be a blank line for github to parse ```markdown |foo | bar | |----|-----| |baz | buzz| ``` </div > <div markdown= \"1\" class= \"two-column\" > |foo | bar | |----|-----| |baz | buzz| </div> closes the div --- this clears the \"float\" REQUIRED when done |foo | bar | |----|-----| |baz | buzz| foo bar baz buzz <div markdown= \"1\" class= \"row\" > > :bug: **here is another example** this uses the row class and will make any blocks, figures, etc equal spaced --- > :thumbsup: they will be equal sizes with whatever width is left from image and as you can see the heights get adjusted to be equal as well --- ![](images/dingus/image.png){.small} </div> here is another example well just use admonitions and a table they will be equal sizes with whatever width is left from image and as you can see the heights get adjusted to be equal as well Headings & Breaks # h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading Horizontal Rules --- h1 Heading h2 Heading h3 Heading h4 Heading Horizontal Rules footnote, click the return icon here to go back -> \u21a9 \u21a9 the number will not necessarily be what you use \u21a9 text reference \u21a9","title":"TL;DR Cheat Sheet"},{"location":"notes/cheat-sheet/#tldr-cheat-sheet","text":"For a 60 second quick start on Markdown commonmark has a great tutorial","title":"TL;DR Cheat Sheet"},{"location":"notes/cheat-sheet/#emphasis","text":"this is _italic_ and so is *this* this is __bold__ and so is **this** ^^underline^^, ~~strike through~~ ==highlight== and `inline code` ==*you* **can** ^^combine^^ `too` == this is italic and so is this this is bold and so is this underline , ~~strike through~~ highlight and inline code you can combine ~~too~~","title":"Emphasis"},{"location":"notes/cheat-sheet/#soft-hard-line-breaks","text":"Put 2 spaces at the end of a line to force a line break. If you simply hit enter and don't use 2 spaces it merges the lines like this. You can also force a break <br> anywhere using the `<br>` tag like we just did Put 2 spaces at the end of a line to force a line break. If you simply hit enter and don't use 2 spaces it merges the lines like this You can also force a break anywhere using the <br> tag like we just did","title":"Soft &amp; Hard Line Breaks"},{"location":"notes/cheat-sheet/#lists","text":"* need a blank line above to start new list + valid bullet symbols + `*` , `-` or '+' - 4 spaces or 1 tab - to indent 1. use *numbers* for ordered * can nest 2. **numbers** can be in order 3. can also nest 1. but it will fix them if not - list item with two paragraphs. anything like this paragraph should be indented by 4 spaces or a tab - you can add blocks too > :memo: > > * list under lists > * under lists need a blank line above to start new list valid bullet symbols * , - or '+' 4 spaces or 1 tab to indent use numbers for ordered can nest numbers can be in order can also nest but it will fix them if not list item with two paragraphs. anything like this paragraph should be indented by 4 spaces or a tab you can add blocks too list under lists under lists","title":"Lists"},{"location":"notes/cheat-sheet/#tasks","text":"- [ ] Task Lists `- [ ]` - [x] x instead of space - [x] will mark it complete - [ ] work just like lists * can can contain indents * or anything else a list can 1. Or can be nested under others lists - [ ] like this - [ ] and this 2. This can help - [ ] like this - [ ] and this Task Lists - [ ] x instead of space will mark it complete work just like lists can can contain indents or anything else a list can Or can be nested under others lists like this and this This can help like this and this","title":"Tasks"},{"location":"notes/cheat-sheet/#links","text":"[ simple link ]( https://www.google.com ) [ with optional title ]( https://www.google.com \"Google's Homepage\" ) point to a [ relative file or md ]( ./embedding/lucid.md ) or mail link with emoji [ \ud83d\udce7 ]( mailto:joshdev@9ci.com ) or click this cloud icon to see the list of icon options [ _cloud_{.icon} ]( https://material.io/icons/ ) or [ use an image ![ ]( images/dingus/image-small.png )](images/dingus/image.png) [Reference-Style Links][some reference id] put link at bottom of paragraph or page. you can use numbers or text for [reference-style link definitions][1] or leave it empty and just use the [link text itself] to [ open in new tab ]( sandbox.md ){.new-tab} use `{target=_blank} or {.new-tab}` attributes use it on [ref links][new tab]{.new-tab} too Indenting _reference links_ 2 spaces is not required but a recommended convention [some reference id]: https://daringfireball.net/projects/markdown/syntax#link [1]: http://reason.com/blog [link text itself]: ./images/material.png [new tab]: sandbox.md simple link with optional title point to a relative file or md or mail link with emoji \ud83d\udce7 or click this cloud icon to see the list of icon options cloud or use an image Reference-Style Links put link at bottom of paragraph or page. you can use numbers or text for reference-style link definitions or leave it empty and just use the link text itself to open in new tab us {target=_blank} or {.new-tab} attributes use it on ref links too reference links can be at bottom of paragraph. Indenting 2 spaces is not required but a recommended convention","title":"Links"},{"location":"notes/cheat-sheet/#images","text":"inline ![](images/dingus/image-small.png) with alt text ![ foo ]( images/dingus/image-small.png ) with ref links ![img-small][] can use [ sizing attributes ]( blocks/#sizing-alignment ) Put `zoomify` in the alt text bracket to enable clicking to zoom. Try clicking on any of these images ![zoomify][img-dingus]{.tiny} ![ zoomify ]( images/dingus/image.png ){.center .xsmall} > :camera: **Figure Title** > ![zoomify](images/dingus/image.png){.center .small} [img-small]: ./images/dingus/image-small.png [img-dingus]: ./images/dingus/image.png inline with alt text with ref links can use sizing attributes Put zoomify in the alt text bracket to enable clicking to zoom. Try it on any of these images Figure Title","title":"Images"},{"location":"notes/cheat-sheet/#abbreviations","text":"here are some abbr's HTML and FUBAR >:bulb: if your editor gets confused by not having and enclosing * then just add it to end of abbr def. --- >:warning: Don't indent these, doesn't seem to work *[abbr]: Abbreviations *[def]: Definition *[HTML]: Hyper Text Markup Language *[FUBAR]: You know what it means* here are some abbr 's HTML and FUBAR if your editor gets confused by not having and enclosing * then just add it to end of abbr def . Don't indent these, doesn't seem to work","title":"Abbreviations"},{"location":"notes/cheat-sheet/#footnotes","text":"Footnotes[^1] work like reference links They auto-number like ordered lists[^3] You can use any reference id[^text reference] like ref links they can be organized at bottom of paragraph or page. [^1]: footnote, click the return icon here to go back -> [^3]: the number will not necessarily be what you use [^text reference]: text reference Footnotes 1 work like reference links They auto-number like ordered lists 2 You can use any reference id 3 like ref links they can be organized at bottom of paragraph or page.","title":"Footnotes"},{"location":"notes/cheat-sheet/#tables","text":"Colons can be used to align columns . 3 dashes min to separate headers . Outer pipes (|) are optional , and you don ' t need to make the raw Markdown line up prettily . You can also use inline Markdown . | Tables | Are | Cool | | -------- |:- ------------: | ---------: | | col 3 is | right - aligned | $ 1600 | | col 2 is | centered | $ 12 | | | ** Total ** | ** $ 1612 ** | == Table == | ** Format ** | \ud83d\udc40 _ scramble_ --- | --- | --- * Still * | ` renders ` | **nicely** [ with links ]( images / dingus / image - small . png ) | images ![ zoomify ]( images / dingus / image - small . png ){. tiny } | emojis \ud83c\udf54 icons _ cloud_ {. icon } | footnotes [ ^ 1 ] | use ` < br> ` < br > for multi - line < br > line breaks Colons can be used to align columns. 3 dashes min to separate headers. Outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 Total $1612 Table Format \ud83d\udc40 fun Still renders nicely with links images emojis \ud83c\udf54 icons cloud footnotes 1 use <br> for multi-line line breaks","title":"Tables"},{"location":"notes/cheat-sheet/#blockquotes","text":"> Blockquotes are handy to callout text. they are greedy and will keep grabbing text. The '>' is optional unless trying join > paragraphs, tables etc. a blank line and a new paragraph or other markdown thing end them >:bulb: use a `---` seperator or `<br>` if you want multiple sepearte block quotes --- > can have nested > > blockquotes inside of block quotes block quotes can also contain any valid markdown Blockquotes are handy to callout text. they are greedy and will keep grabbing text. The '>' is optional unless trying join paragraphs, tables etc. a blank line and a new paragraph or other markdown thing end them use a --- seperator or <br> if you want multiple seperate block quotes to follow can have nested blockquotes inside of block quotes block quotes can also contain any valid markdown","title":"Blockquotes"},{"location":"notes/cheat-sheet/#blocks-admonitions-callouts-sidebars","text":"> :memo: **Memo Admonition** use blockquotes with emoji indicators for admonition memos, callout etc.. --- > :boom: Title title like above is optional --- > :bulb: See [the section about blocks](blocks.md#cheatsheet) for the list of emojis that can be used. Memo Admonition use blockquotes with emoji indicators for admonition memos, callout etc.. Title title like above is optional See the section about blocks for the list of emojis that can be used.","title":"Blocks - admonitions, callouts, sidebars"},{"location":"notes/cheat-sheet/#row-divs","text":"through out this doc we have been using a <div markdown=\"1\" class=\"two-column\"> . <div markdown= \"1\" class= \"two-column\" > markdown=\"1\" tells it to process what inside <-needs to be a blank line for github to parse ```markdown |foo | bar | |----|-----| |baz | buzz| ``` </div > <div markdown= \"1\" class= \"two-column\" > |foo | bar | |----|-----| |baz | buzz| </div> closes the div --- this clears the \"float\" REQUIRED when done |foo | bar | |----|-----| |baz | buzz| foo bar baz buzz <div markdown= \"1\" class= \"row\" > > :bug: **here is another example** this uses the row class and will make any blocks, figures, etc equal spaced --- > :thumbsup: they will be equal sizes with whatever width is left from image and as you can see the heights get adjusted to be equal as well --- ![](images/dingus/image.png){.small} </div> here is another example well just use admonitions and a table they will be equal sizes with whatever width is left from image and as you can see the heights get adjusted to be equal as well","title":"Row Divs"},{"location":"notes/cheat-sheet/#headings-breaks","text":"# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading Horizontal Rules ---","title":"Headings &amp; Breaks"},{"location":"notes/cheat-sheet/#h1-heading","text":"","title":"h1 Heading"},{"location":"notes/cheat-sheet/#h2-heading","text":"","title":"h2 Heading"},{"location":"notes/cheat-sheet/#h3-heading","text":"","title":"h3 Heading"},{"location":"notes/cheat-sheet/#h4-heading","text":"Horizontal Rules footnote, click the return icon here to go back -> \u21a9 \u21a9 the number will not necessarily be what you use \u21a9 text reference \u21a9","title":"h4 Heading"},{"location":"notes/css/","text":"css Cascading Style Sheets single element p { color : red ; } Selecting multiple elements p , li , h1 { color : red ; }","title":"css"},{"location":"notes/css/#css","text":"Cascading Style Sheets","title":"css"},{"location":"notes/css/#single-element","text":"p { color : red ; }","title":"single element"},{"location":"notes/css/#selecting-multiple-elements","text":"p , li , h1 { color : red ; }","title":"Selecting multiple elements"},{"location":"notes/less (2)/","text":"less Leaner Style Sheets","title":"less"},{"location":"notes/less (2)/#less","text":"Leaner Style Sheets","title":"less"},{"location":"notes/static \u51fd\u6570/","text":"static \u51fd\u6570","title":"static \u51fd\u6570"},{"location":"notes/static \u51fd\u6570/#static","text":"","title":"static \u51fd\u6570"},{"location":"notes/\u5b57\u4f53/","text":"\u5b57\u4f53 Karla Dank Mono h2 h3 h4 h22","title":"\u5b57\u4f53"},{"location":"notes/\u5b57\u4f53/#_1","text":"Karla Dank Mono","title":"\u5b57\u4f53"},{"location":"notes/\u5b57\u4f53/#h2","text":"","title":"h2"},{"location":"notes/\u5b57\u4f53/#h3","text":"","title":"h3"},{"location":"notes/\u5b57\u4f53/#h4","text":"","title":"h4"},{"location":"notes/\u5b57\u4f53/#h22","text":"","title":"h22"},{"location":"notes/\u6b63\u5219\u8868\u8fbe\u5f0f/","text":"\u6b63\u5219\u8868\u8fbe\u5f0f","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"notes/\u6b63\u5219\u8868\u8fbe\u5f0f/#_1","text":"","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"notes/\u8f6f\u4ef6\u4f7f\u7528/","text":"\u8f6f\u4ef6\u4f7f\u7528 \u5de6\u4fa7sidebar-Notebooks\u4e0b\u6dfb\u52a0\u6587\u4ef6\u5939 \u8bbe\u7f6e\u6807\u7b7e\u4e3a Notebooks/Test","title":"\u8f6f\u4ef6\u4f7f\u7528"},{"location":"notes/\u8f6f\u4ef6\u4f7f\u7528/#_1","text":"\u5de6\u4fa7sidebar-Notebooks\u4e0b\u6dfb\u52a0\u6587\u4ef6\u5939 \u8bbe\u7f6e\u6807\u7b7e\u4e3a Notebooks/Test","title":"\u8f6f\u4ef6\u4f7f\u7528"},{"location":"notes/\ud83d\udcafRapidJson/","text":"RapidJson \u4e2d\u6587\u5b57\u7b26\u4e32 Code std :: string hello = \"\u4f60\u597d\" ; // \u7f16\u7801\u8f6c\u6362\u53ef\u7701\u7565 hello = CodeToCode :: GBKToUTF8 ( QString :: fromStdString ( hello )). toStdString (); Value strContent ( kStringType ); strContent . SetString ( hello . c_str (), allocator ); root . AddMember ( \"Status\" , strContent , allocator );","title":"\ud83d\udcafRapidJson"},{"location":"notes/\ud83d\udcafRapidJson/#rapidjson","text":"","title":"RapidJson"},{"location":"notes/\ud83d\udcafRapidJson/#_1","text":"Code std :: string hello = \"\u4f60\u597d\" ; // \u7f16\u7801\u8f6c\u6362\u53ef\u7701\u7565 hello = CodeToCode :: GBKToUTF8 ( QString :: fromStdString ( hello )). toStdString (); Value strContent ( kStringType ); strContent . SetString ( hello . c_str (), allocator ); root . AddMember ( \"Status\" , strContent , allocator );","title":"\u4e2d\u6587\u5b57\u7b26\u4e32"}]}